name: Release
on:
  push:
    branches:
      - "!**/*"
    tags:
      - "v*"

env:
  GO111MODULE: "on"

jobs:
  build:
    name: Build

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        include:
          - os: ubuntu-latest
            osarch: linux/386 linux/amd64 linux/arm freebsd/386 freebsd/amd64 openbsd/386 openbsd/amd64 windows/386 windows/amd64 freebsd/arm netbsd/386 netbsd/amd64 netbsd/arm linux/s390x linux/mips64 linux/mips64le linux/mips linux/mipsle
          - os: macos-latest
            osarch: darwin/386 darwin/amd64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: make package
        run: |
          set -xe

          export GOPATH=`go env GOPATH`
          export PATH=$GOPATH/bin:$PATH

          go get -u github.com/mitchellh/gox
          make clean gox_with_zip

        env:
          GOX_OSARCH: ${{ matrix.osarch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: bin-${{ matrix.os }}
          path: bin/

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@v2.0.0
        if: "! success()"
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release

    needs:
      - build

    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts from ubuntu-latest
        uses: actions/download-artifact@v1
        with:
          name: bin-ubuntu-latest
          path: bin/

      - name: Download artifacts from macos-latest
        uses: actions/download-artifact@v1
        with:
          name: bin-macos-latest
          path: bin/

      - name: Upload to GitHub Releases
        run: |
          set -xe

          export GOPATH=`go env GOPATH`
          export PATH=$GOPATH/bin:$PATH

          export PUSH_EVENT_REF=$(jq --raw-output .ref "$GITHUB_EVENT_PATH")

          if [ "$(echo $PUSH_EVENT_REF | grep refs/tags/ | wc -l)" = "0" ]; then
            echo "ref is not a tag: ${PUSH_EVENT_REF}"
            exit 1
          fi

          export TAGNAME=$(echo $PUSH_EVENT_REF | sed -e 's!refs/tags/!!g')
          export USERNAME=$(echo $GITHUB_REPOSITORY | cut -d / -f 1)
          export REPO=$(echo $GITHUB_REPOSITORY | cut -d / -f 2)

          go get -u github.com/tcnksm/ghr
          $GOPATH/bin/ghr -u ${USERNAME} -r ${REPO} -n ${TAGNAME} -b "Release ${TAGNAME}" ${TAGNAME} bin/

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Slack Notification
        uses: homoluctus/slatify@v2.0.0
        if: always()
        with:
          job_name: '*release*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
